<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4022.18">
  <POU Name="MAIN" Id="{2514b5fd-88f4-47c5-be60-871b9fead928}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR

{attribute 'pytmc' := 'pv: TST:MOTION'}
{attribute 'TcLinkTo' := '.nRawEncoderULINT     := TIID^Device 1 (EtherCAT)^Term 1 (EK1200)^M1-EL5042^FB Inputs Channel 1^Position'}
M1: ST_MotionStage := (sName := 'TST:MOTION',
                        bPowerSelf := True,
                        nEnableMode:= ENUM_StageEnableMode.DURING_MOTION);

{attribute 'TcLinkTo' := 'TIID^Device 1 (EtherCAT)^Term 1 (EK1200)^M1-EL1084^Channel 1^Input'}
bLimitBackwardEnable AT %I* : BOOL;

{attribute 'TcLinkTo' := 'TIID^Device 1 (EtherCAT)^Term 1 (EK1200)^M1-EL1084^Channel 2^Input'}
bLimitForwardEnable AT %I* : BOOL;

fbmotion1 : FB_MotionStage;

	fbEPS : FB_EPS;
	bInit : BOOL := TRUE;
	nIndex : UINT := 1;
	nEPSIndex : UINT := 1;
	fPos : LREAL;
	
	{attribute 'pytmc' := 'pv: TST:MOTION:EPS_TST_TOGGLE'}
	btest1	: BOOL := TRUE;
	
	bEPS_OK : BOOL;
	bInRange : BOOL;

	fbEPS_States : FB_CheckEPS;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[// GX-F8A are NPN 
M1.bLimitForwardEnable 	:= Not bLimitForwardEnable;
M1.bLimitBackwardEnable := Not bLimitBackwardEnable;

M1.bHardwareEnable := True;
fbmotion1(stMotionStage:=M1);

IF bInit THEN
	aEPS_TEST[1].fBwd_Limits := -0.5;
	aEPS_TEST[1].fFwd_Limits := 0.5;
	
	aEPS_TEST[2].fBwd_Limits := -2;
	aEPS_TEST[2].fFwd_Limits := 2;
	
	
	bInit := FALSE;
END_IF

fPos := M1.stAxisStatus.fActPosition;

fbEPS(eps:= aEPS_TEST[1].stEPS);
fbEPS.setDescription('TST_TOGGLE: TRUE;IN LIMITS; NOT TEST 2');
fbEPS.setBit(0, btest1);
fbEPS.setBit(1, F_InRange(fPos, aEPS_TEST[1].fBwd_Limits, aEPS_TEST[1].fFwd_Limits));
fbEPS.setBit(2, NOT aEPS_TEST[2].stEPS.bEPS_OK);

fbEPS(eps:= aEPS_TEST[2].stEPS);
fbEPS.setDescription('TST_TOGGLE: FALSE;IN LIMITS; NOT TEST 1');
fbEPS.setBit(0, NOT btest1);
fbEPS.setBit(1, F_InRange(fPos, aEPS_TEST[2].fBwd_Limits, aEPS_TEST[2].fFwd_Limits));
fbEPS.setBit(2, NOT aEPS_TEST[1].stEPS.bEPS_OK);


bInRange := F_InRange(fPos, aEPS_TEST[nEPSIndex].fBwd_Limits, aEPS_TEST[nEPSIndex].fFwd_Limits);

fbEPS_States(stMotor:=M1, fPosition:=M1.stAxisStatus.fActPosition, aEPSLimits:=aEPS_TEST);

]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>